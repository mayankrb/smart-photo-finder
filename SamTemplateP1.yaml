AWSTemplateFormatVersion: 2010-09-09
Transform: "AWS::Serverless-2016-10-31"
Description: P1

Resources:
  photosalbumb:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: photosalbummb7992
    Environment:
        Variables:
          REGION: us-east-1

  indexphotosP1:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./LF1
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::931871336172:role/service-role/LF1-index-photos-role-lh3gnyga'
      Layers:
        - >-
          arn:aws:lambda:us-east-1:931871336172:layer:LF2PackagesLayer:1
      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: photosalbumb
            Events:
              - 's3:ObjectCreated:Put'
      Environment:
        Variables:
          REGION: us-east-1
  searchphotosP1:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./LF2
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::931871336172:role/service-role/LF2-search-photos-role-8547ipu2'
      Layers:
        - >-
          arn:aws:lambda:us-east-1:931871336172:layer:LF2PackagesLayer:1
      Environment:
        Variables:
          REGION: us-east-1
      Events:
        RestApiPhotoAlbum:
          Type: Api
          Properties:
            Path: /search
            Method: GET

  RestApiPhotoAlbum:
    Type: AWS::ApiGateway::RestApi
    Properties:
      BodyS3Location:
        Bucket: photoalbummb
        Key: "api.yaml"
      Description: "Rest api having search photos and upload photos methods."
      Name: RestApiPhotoAlbum
      FailOnWarnings: true
      EndpointConfiguration:
        Types:
          - "REGIONAL"

  PermissionForAPIToLF2:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt searchphotosP1.Arn
      Principal: apigateway.amazonaws.com
      SourceAccount: !Ref "AWS::AccountId"
      SourceArn: !Join
        - ""
        - - "arn:aws:apigateway:us-west-2::/restapis/"
          - !Ref RestApiPhotoAlbum
          - "/resources/*/methods/GET"

  PermissionForS3ToLF1:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref indexphotosP1
      Principal: s3.amazonaws.com
      SourceAccount: !Ref "AWS::AccountId"
      SourceArn: "arn:aws:s3:::photosalbumb"

  OpenSearchServiceDomain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: 'photo'
      EngineVersion: 'OpenSearch_1.0'
      ClusterConfig:
        InstanceCount: '1'
        InstanceType: 't3.small.search'
      EBSOptions:
        EBSEnabled: true
        Iops: '0'
        VolumeSize: '10'
        VolumeType: 'gp2'
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          -
            Effect: 'Allow'
            Principal:
                AWS: "*"
            Action: es:*
            Resource: 'arn:aws:iam::226417489901:domain/photo'
      DomainEndpointOptions:
        EnforceHTTPS: true
      EncryptionAtRestOptions:
        Enabled: true
      NodeToNodeEncryptionOptions:
        Enabled: true

  RestApiPhotoAlbumDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: [RestApiPhotoAlbum]
    Properties:
      Description: The v1 deployment of photo album api
      RestApiId: !Ref RestApiPhotoAlbum
      StageName: v1