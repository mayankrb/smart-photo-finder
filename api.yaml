---
swagger: "2.0"
info:
  version: "2022-04-07T20:34:02Z"
  title: "put-to-s3"
host: "qy2dk3ui7d.execute-api.us-west-2.amazonaws.com"
basePath: "/v1"
schemes:
- "https"
paths:
  /search:
    get:
      operationId: "searchPhotos"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/SearchResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:226417489901:function:search-photos/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /upload/{bucket}/{key}:
    put:
      produces:
      - "application/json"
      parameters:
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
      - name: "key"
        in: "path"
        required: true
        type: "string"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
      - name: "Access-Control-Allow-Origin"
        in: "header"
        required: false
        type: "string"
      - name: "Access-Control-Allow-Headers"
        in: "header"
        required: false
        type: "string"
      - name: "x-amz-meta-customLabels"
        in: "header"
        required: false
        type: "string"
      - name: "bucket"
        in: "path"
        required: true
        type: "string"
      - name: "Access-Control-Allow-Methods"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "403":
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::226417489901:role/api-gateway-upload-to-s3"
        httpMethod: "PUT"
        uri: "arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.Accept: "method.request.header.Accept"
          integration.request.header.x-amz-meta-customLabels: "method.request.header.x-amz-meta-customLabels"
          integration.request.path.key: "method.request.path.key"
          integration.request.path.bucket: "method.request.path.bucket"
          integration.request.header.Content-Type: "method.request.header.Content-Type"
        passthroughBehavior: "when_no_match"
        type: "aws"
    options:
      produces:
      - "application/json"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
      - name: "Access-Control-Allow-Origin"
        in: "header"
        required: false
        type: "string"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
      - name: "Access-Control-Allow-Headers"
        in: "header"
        required: false
        type: "string"
      - name: "x-amz-meta-customLabels"
        in: "header"
        required: false
        type: "string"
      - name: "Access-Control-Allow-Methods"
        in: "header"
        required: false
        type: "string"
      - name: "bucket"
        in: "path"
        required: true
        type: "string"
      - name: "key"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:226417489901:function:return_200/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
  Error:
    type: "object"
    properties:
      message:
        type: "string"
    title: "Error Schema"
  Photo:
    type: "object"
    properties:
      url:
        type: "string"
      labels:
        type: "array"
        items:
          type: "string"
  SearchResponse:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Photo"
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,PUT'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,PUT'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
x-amazon-apigateway-binary-media-types:
- "image/jpeg"
- "image/jpg"
- "image/png"
- "image/jpeg;base64"
